name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels for ${{ matrix.python }}-${{ matrix.buildplat[1] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      max-parallel: 5
      matrix:
        python-version: ["3.10"]
        python: ["cp310"]
        #os: [ubuntu-20.04, windows-2019, macOS-latest]
        buildplat:
          - [ubuntu-20.04, manylinux_x86_64]
          - [ubuntu-20.04, musllinux_x86_64]
          - [macos-latest, macosx_x86_64]
          - [macos-latest, macosx_arm64]
          #- [windows-2019, win_amd64]S
          #- [windows-2019, win32]

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.5

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          #CIBW_PRERELEASE_PYTHONS: True
          CIBW_BEFORE_BUILD: pip list
          #CIBW_BEFORE_BUILD_WINDOWS: choco install -y xdelta3
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}
          CIBW_ARCHS: all
          #CIBW_TEST_SKIP: "*-macosx_arm64"
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl